@page "/teacher/delete/{id:int}"
@using StudentsManagement.Shared.Models
@inject NavigationManager navigation;
@rendermode InteractiveServer

<h3>Delete Teacher Detail</h3>

<hr />
<div class="row">
    <div class="col-md-12">
        <table class="table">
            <tr>
                <th>Full Name</th>
                <td>@teacherobj.FullName</td>
            </tr>
            <tr>
                <th>Gender</th>
                <td>@teacherobj.Gender?.Description</td>
            </tr>
            <tr>
                <th>Date of birth</th>
                <td>@teacherobj.DOB.ToShortDateString()</td>
            </tr>
            <tr>
                <th>Email Address</th>
                <td>@teacherobj.EmailAddress</td>
            </tr>
            <tr>
                <th>Address</th>
                <td>@teacherobj.Address</td>
            </tr>
            <tr>
                <th>Phone Number</th>
                <td>@teacherobj.PhoneNumber</td>
            </tr>
            <tr>
                <th>Marital Status</th>
                <td>@teacherobj.MaritalStatus?.Description</td>
            </tr>
        </table>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary" @onclick="Delete">Delete Teacher</button>
        <button type="button" @onclick="()=>Cancel()" class="btn btn-danger">Cancel</button>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    public Teacher teacherobj { get; set; } = new();

    [Parameter]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadTeacher();
    }

    private async Task LoadTeacher()
    {
        teacherobj = await TeacherService.GetByIdAsync(id);
    }

    protected async Task Delete()
    {
        var result = await TeacherService.DeleteAsync(id);
        navigation.NavigateTo("/teachers-list");
    }

    public void Cancel()
    {
        navigation.NavigateTo("/teachers-list");
    }
}
